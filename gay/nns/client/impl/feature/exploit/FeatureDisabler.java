package gay.nns.client.impl.feature.exploit;

import gay.nns.client.api.event.interfaces.Subscribe;
import gay.nns.client.api.feature.Feature;
import gay.nns.client.api.feature.enums.FeatureCategory;
import gay.nns.client.api.feature.interfaces.FeatureInfo;
import gay.nns.client.api.setting.annotations.Serialize;
import gay.nns.client.api.setting.annotations.SettingMode;
import gay.nns.client.impl.event.packet.EventPacketReceive;
import gay.nns.client.impl.event.packet.EventPacketSend;
import gay.nns.client.impl.event.render.EventRender2D;
import gay.nns.client.util.math.UtilMath;
import gay.nns.client.util.math.UtilTimer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.server.S12PacketEntityVelocity;

import java.util.ArrayList;
import java.util.List;

@FeatureInfo(name = "Disabler", description = "Disables all features", category = FeatureCategory.EXPLOIT)
public class FeatureDisabler extends Feature {

	@Serialize(name = "Mode")
	@SettingMode(modes = {"Minemen"})
	public String mode = "Minemen";

	private final UtilTimer utilTimer = new UtilTimer();

	private List<Packet> packets = new ArrayList<>();

	private int ticks = 0;

	public FeatureDisabler() {
		super();
	}

	@Override
	protected void onEnable() {
		super.onEnable();
	}

	@Override
	protected void onDisable() {
		super.onDisable();
	}

	// C0b
	// C0f
	// 2x velo : cancel velo
	// 2x hits : reach 6

	@Subscribe
	public void onRender2D(final EventRender2D eventRender2D) {
		this.setSuffix(mode);
	}

	@Subscribe
	public void onPacketSend(final EventPacketSend eventPacketSend) {
		Packet<?> packet = eventPacketSend.getPacket();

		switch (mode.toLowerCase()) {
			case "minemen" -> {
				if (packet instanceof C0BPacketEntityAction) {
					eventPacketSend.setCancelled(true);
				}
			}
		}
	}

	@Subscribe
	public void onPacketReceive(final EventPacketReceive eventPacketReceive) {
		Packet<?> packet = eventPacketReceive.getPacket();

		switch (mode.toLowerCase()) {
			case "minemen" -> {
				if (packet instanceof S12PacketEntityVelocity packetEntityVelocity) {
					if (packetEntityVelocity.getEntityID() == mc.thePlayer.getEntityId()) {
						ticks++;
						if (ticks % 2 == 0) {
							eventPacketReceive.setCancelled(true);
						}
					}
				}
			}
		}
	}

}
